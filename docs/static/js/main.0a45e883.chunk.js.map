{"version":3,"sources":["images/cryptocurrency.png","components/NavBar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Exchanges.jsx","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","images/cryptonews.jpg","components/News.jsx","App.js","app/store.js","index.js"],"names":["NavBar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Text","Typography","Panel","Collapse","Exchanges","data","isFetching","exchangesList","exchanges","span","map","exchange","showArrow","header","rank","iconUrl","name","millify","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","Homepage","globalStats","stats","title","value","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Cryptocurrencies","cryptosList","coins","cryptos","setCryptos","search","setSearch","filteredData","filter","toLowerCase","includes","placeholder","onChange","e","target","gutter","price","marketCap","change","xs","sm","lg","extra","alt","hoverable","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","type","options","scales","yAxes","ticks","beginAtZero","Option","Select","useParams","setTimePeriod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","href","rel","cryptoNewsApiHeaders","cryptoNewsApi","getCryptosNews","newsCategory","useGetCryptosNewsQuery","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","datePublished","image","provider","style","width","height","thumbnail","contentUrl","demoImage","substring","moment","startOf","fromNow","App","exact","path","CryptoDetails","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.0a45e883.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\n\nconst NavBar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size={\"large\"} />\n        <Typography.Title level={3} className=\"logo\">\n          <Link to=\"/\">Cryptoverse</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": process.env.REACT_APP_CRYPTO_HOST,\n  \"x-rapidapi-key\": process.env.REACT_APP_CRYPTO_KEY,\n};\n\nconst baseUrl = process.env.REACT_APP_CRYPTO_URL;\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"crypto\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery,\n} = cryptoApi;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Cryptocurrencies, News } from \"./index\";\nimport Loader from \"./Loader\";\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Cryptocurrencies\"\n            value={millify(globalStats.total)}\n          />{\" \"}\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to={\"/cryptocurrencies\"}>Show more</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to={\"/news\"}>Show more</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const coins = cryptosList?.data?.coins;\n  const [cryptos, setCryptos] = useState(coins);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const filteredData = coins?.filter(({ name }) =>\n      name.toLowerCase().includes(search.toLowerCase())\n    );\n\n    setCryptos(filteredData);\n  }, [coins, search]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map(\n          ({ id, rank, name, iconUrl, price, marketCap, change }) => (\n            <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={id}>\n              <Link to={`/crypto/${id}`}>\n                <Card\n                  title={`${rank}. ${name}`}\n                  extra={\n                    <img className=\"crypto-image\" src={iconUrl} alt=\"crypto\" />\n                  }\n                  hoverable\n                >\n                  <p>Price: {millify(price)} </p>\n                  <p>Market Cap: {millify(marketCap)}</p>\n                  <p>Daily Change: {millify(change)}%</p>\n                </Card>\n              </Link>\n            </Col>\n          )\n        )}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from \"react\";\nimport Chart from \"chart.js/auto\"; // need to fix bug with Error: \"category\" is not a registered scale\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\n    );\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price In USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart{\" \"}\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            Change: {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line type=\"line\" data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\n\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nimport LineChart from \"./LineChart\";\nimport Loader from \"./Loader\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst Cryptocurrencies = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = [\"24h\", \"7d\", \"30d\", \"1y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US Dollar (USD). View value\n          statistics, market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Timeperiod\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date} value={date}>\n            {date}\n          </Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Stats Info\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n          </Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default Cryptocurrencies;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsApiHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": process.env.REACT_APP_NEWS_HOST,\n  \"x-rapidapi-key\": process.env.REACT_APP_NEWS_KEY,\n};\n\nconst baseUrl = process.env.REACT_APP_NEWS_URL;\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsApiHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNews\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptosNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptosNewsQuery } = cryptoNewsApi;\n","export default __webpack_public_path__ + \"static/media/cryptonews.a72f00c4.jpg\";","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\nimport { useGetCryptosNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport demoImage from \"../images/cryptonews.jpg\";\nimport Loader from \"./Loader\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const count = simplified ? 6 : 12;\n  const { data: cryptoNews } = useGetCryptosNewsQuery({\n    newsCategory,\n    count,\n  });\n  const { data } = useGetCryptosQuery(100);\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data?.data?.coins.map(({ name }) => (\n              <Option value={name}>{name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map(\n        ({ url, name, datePublished, image, description, provider }, i) => (\n          <Col xs={24} sm={12} lg={8} key={i}>\n            <Card hoverable className=\"news-card\">\n              <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                <div className=\"news-image-container\">\n                  <Title className=\"news-title\" level={4}>\n                    {name}\n                  </Title>\n                  <img\n                    style={{\n                      width: 100,\n                      height: 100,\n                    }}\n                    src={(image && image?.thumbnail?.contentUrl) || demoImage}\n                    alt=\"News\"\n                  />\n                </div>\n                <p>\n                  {description.length > 100\n                    ? `${description.substring(0, 100)} ...`\n                    : description}\n                </p>\n                <div className=\"provider-container\">\n                  <div>\n                    <Avatar\n                      src={\n                        (provider?.length &&\n                          provider[0]?.image?.thumbnail?.contentUrl) ||\n                        demoImage\n                      }\n                      alt=\"news\"\n                    />\n                    <Text className=\"provider-name\">\n                      {provider?.length && provider[0]?.name}\n                    </Text>\n                  </div>\n                  <Text>{moment(datePublished).startOf(\"ss\").fromNow()}</Text>\n                </div>\n              </a>\n            </Card>\n          </Col>\n        )\n      )}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n  NavBar,\n  Exchanges,\n  Homepage,\n  Cryptocurrencies,\n  CryptoDetails,\n  News,\n} from \"./components\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <NavBar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            Cryptoverse <br />\n            All right reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}